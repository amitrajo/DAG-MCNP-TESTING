#! /usr/bin/env python
# encoding: utf-8

top = '.'
out = 'results'

import os.path, sys

sys.path.append('..')
from dagmctesting import *


def setup_testcases( self ):
    self.allcases = [ 'squares', 'metroid', 'stu_cyl', 'stu_cyl2']


DagmcTestContext.setup_testcases = setup_testcases

def get_case_definition( self, casename ):
    case = DagmcTestContext.CaseDefn()
    case.name = casename
    case.runname = 'test_'.format(casename)

    meshes = []

    def mesh_tally_output( t ):
        case.outputs[os.path.basename(t)] = 'cases/{1}/{0}'.format(t,casename)

    # Defaults for all cases
    case.inputs['inp'] = 'cases/{0}/{0}.inp'.format(casename)
    
    if self.options.facet_inputs: 
        case.inputs['gcad'] = 'cases/{0}/{0}.h5m'.format( casename )
    else:
        case.inputs['gcad'] = 'cases/{0}/{0}.sat'.format( casename )
        case.flags.append( 'ftol=1e-4' )

    # case.outputs['o'] = output_template( 'out' ) 
    if casename == 'squares':
        meshes = ['cylinder.h5m','twospheres.h5m'] 
        mesh_tally_output('ref/meshtal34.vtk')
        mesh_tally_output('ref/meshtal44.vtk')
        mesh_tally_output('ref/meshtal54.vtk')
        case.outputs['o'] = 'cases/squares/ref/outp'
        case.outputs['meshtal'] = 'cases/squares/ref/meshtal'

    if casename == 'metroid':
        meshes = ['meshes/vol2345.h5m']
        mesh_tally_output('ref/meshtal14.vtk')
        case.outputs['o'] = 'cases/metroid/ref/outp'
        case.inputs['inp'] = 'cases/metroid/dagmc.inp'
        case.inputs['gcad'] = 'cases/metroid/geom23456.h5m'
    
    if casename == 'stu_cyl':
        meshes = ['tallyTetMesh.h5m']
        for i in range(24,65,10):
            mesh_tally_output( 'ref/meshtal{0}.vtk'.format(i) )
        case.outputs['o'] = 'cases/stu_cyl/ref/outp'
        case.inputs['inp']= 'cases/stu_cyl/meshtalTest.i'
        case.inputs['gcad'] = 'cases/stu_cyl/meshtalTest.sat'

    if casename == 'stu_cyl2':
        meshes = ['tallyTetMesh.h5m']
        mesh_tally_output( 'ref/meshtal4.vtk' )
        mesh_tally_output( 'ref/meshtal64.vtk' )
        case.outputs['o'] = 'cases/stu_cyl2/ref/outp'
        case.inputs['inp'] = 'cases/stu_cyl2/meshtalTest2Tal.i'
        case.inputs['gcad'] = 'cases/stu_cyl2/meshtalTest.sat'


        
    
    for m in meshes:
        case.inputs['EXTRA'+os.path.basename(m)] = 'cases/{0}/{1}'.format(casename,m)

    return case

DagmcTestContext.get_case_definition = get_case_definition

